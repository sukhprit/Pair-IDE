{"command":"getVersion", "log":["DSLite version %s\n", "version"]}
{"command":"defineOption", "data":["config,c", "ccxml configuration file", true]}
{"command":"defineOption", "data":["file,f", "elf, coff or binary file to flash or verify", false]}
{"command":"defineOption", "data":["loadSettings,s", "settings file generated by UniFlash GUI", false]}
{"command":"defineOption", "data":["timeout,t", "timeout in seconds, infinite if unspecified", false]}
{"command":"defineOption", "data":["log", "enable logging to the specified file", false]}
{"command":"defineValuelessOption", "data":["progressLog", "enable reporting of the progress events."]}
{"command":"defineDefaultOption", "data":["core", "zero based index of core to operate on", 0]}
{"command":"defineOption", "data":["overrideSettings", "override settings of the selected core with a settings JSON object", false]}
{"command":"defineValuelessOption", "data":["listOperations", "list the available flash operations on the selected core"]}
{"command":"defineValuelessOption", "data":["listSettings", "list the final debugger settings applied to the flash operations"]}
{"command":"defineOption", "data":["performBefore,b", "operation to perform before loading", false]}
{"command":"defineOption", "data":["performBefore2", "operation to perform before loading", false]}
{"command":"defineOption", "data":["performBefore3", "operation to perform before loading", false]}
{"command":"defineValuelessOption", "data":["load,l", "load the file COFF/ELF specified with --file to flash"]}
{"command":"defineValuelessOption", "data":["verify,v", "verify the file COFF/ELF specified with --file is in flash"]}
{"command":"defineOption", "data":["addr,a", "start address if loading/verifying a binary file ", false]}
{"command":"defineValuelessOption", "data":["loadBinary", "load the file binary specified with --file to flash"]}
{"command":"defineValuelessOption", "data":["verifyBinary", "verify the binary file specified with --file to flash"]}
{"command":"defineOption", "data":["exportCoff", "export memory into a file using COFF format, using JSON object {[{location, lengthInBytes}, ...], filePath}"]}
{"command":"defineOption", "data":["exportBin", "export memory into a file using binary format, using JSON object {location, numOfValuesToRead, valueSize, filePath}"]}
{"command":"defineOption", "data":["perform,p", "optional operation to perform after loading", false]}
{"command":"defineOption", "data":["perform2", "optional operation to perform after loading", false]}
{"command":"defineOption", "data":["perform3", "optional operation to perform after loading", false]}
{"command":"parseCommandLine"}
{"command":"logging.configure", "data":[true, "@log@"]}
{"command":"logEvent", "data":["statusMessage", "%s: %s", ["type", "message"]]}
{"command":"logEvent", "data":["gelOutput", "GEL: %s", ["message"]]}
{"command":"logEventIf", "data":["progress.update", "%s\n", ["name"], ["isFirstUpdate"], [true]],"enableIf":[@progressLog@]}
{"command":"logEventIf", "data":["progress.update", "\t%s: %s%%\n", ["subActivity", "percent"], ["percent", "isComplete", "isFirstUpdate"], [true, false, false]],"enableIf":[@progressLog@]}
{"command":"logEventIf", "data":["progress.update", "\t%s\n", ["subActivity"], ["percent", "isComplete", "isFirstUpdate"], [false, false, false]],"enableIf":[@progressLog@]}
{"command":"setTimeout", "data":[@timeout@]}
{"command":"configure","data":["@config@"]}
{"command":"debuggerSettings.loadSettingsFromFile","data":["@loadSettings@"]}
{"command":"switchToCore", "data":[@core@]}
{"command":"logMessage", "data":["Connecting...\n"]}
{"command":"targetState.connect"}
{"command":"settings.set","data":[{"AutoRunToLabelOnRestart":false,"AutoRunToLabelOnReset":false}]}
{"command":"settings.set","data":[@overrideSettings@]}
{"command":"settings.get","data":[[]],"log":["\n--- Debugger Settings ---\n%s\n",["nameValueMap"]],"enableIf":[@listSettings@]}
{"command":"flash.listSupportedOperations","data":[],"log":["\n--- Available Flash Operations ---\n%s\n",["ops"]],"enableIf":[@listOperations@]}
{"command":"flash.performOperation","data":["@performBefore@"]}
{"command":"flash.performOperation","data":["@performBefore2@"]}
{"command":"flash.performOperation","data":["@performBefore3@"]}
{"command":"symbols.loadProgramOnly","data":["@file@"], "enableIf":[@load@]}
{"command":"symbols.verifyProgram","data":["@file@"],"enableIf":[@verify@]}
{"command":"symbols.loadProgramOnly","data":[{"filename":"@file@","loadAddress":"@addr@"}], "enableIf":[@loadBinary@]}
{"command":"symbols.verifyProgram","data":[{"filename":"@file@","loadAddress":"@addr@"}],"enableIf":[@verifyBinary@]}
{"command":"memory.exportAsCoff","data":[@exportCoff@],"enableIf":[@exportCoff@]}
{"command":"memory.exportAsBin","data":[@exportBin@],"enableIf":[@exportBin@]}
{"command":"flash.performOperation","data":["@perform@"]}
{"command":"flash.performOperation","data":["@perform2@"]}
{"command":"flash.performOperation","data":["@perform3@"]}
{"command":"logMessage", "data":["Running...\n"]}
{"command":"targetState.run","data":[true]}
{"command":"switchToDebugger"}
{"command":"deConfigure"}
{"command":"logMessage", "data":["Success\n"]}
